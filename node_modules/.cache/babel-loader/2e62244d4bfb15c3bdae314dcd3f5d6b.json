{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nexport const INCREMENT = 'increment';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCoutner(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\ncreateSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducer: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {}\n\n  }\n}); // storeにreducerを登録\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/yoko/Desktop/redux/src/store/index.js"],"names":["createSlice","configureStore","INCREMENT","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCoutner","initialAuthState","isAuthenticated","reducer","login","logout","store","counterActions","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,cAArB,QAA0C,kBAA1C;AACA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,MAAMC,mBAAmB,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAA5B;AAEA,MAAMC,YAAY,GAAGN,WAAW,CAAC;AAC/BO,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE;AADM,CAAzB;AAIAlB,WAAW,CAAC;AACVO,EAAAA,IAAI,EAAE,MADI;AAEVC,EAAAA,YAAY,EAAES,gBAFJ;AAGVE,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,CAACT,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACD,KAHM;;AAIPG,IAAAA,MAAM,CAACV,KAAD,EAAQ,CAAE;;AAJT;AAHC,CAAD,CAAX,C,CAWA;;AACA,MAAMW,KAAK,GAAGrB,cAAc,CAAC;AAC3BkB,EAAAA,OAAO,EAAEb,YAAY,CAACa;AADK,CAAD,CAA5B;AAGA,OAAO,MAAMI,cAAc,GAAGjB,YAAY,CAACkB,OAApC;AAEP,eAAeF,KAAf","sourcesContent":["import {createSlice, configureStore} from '@reduxjs/toolkit';\nexport const INCREMENT = 'increment';\nconst initialCounterState = {counter: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCoutner(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst initialAuthState = {\n  isAuthenticated: false,\n};\n\ncreateSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducer: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {},\n  },\n});\n\n// storeにreducerを登録\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}