{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nexport const INCREMENT = 'increment';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.countercounter = state.counter + actionamoutnt;\n    },\n\n    toggleCoutner() {}\n\n  }\n}); // Reducer\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n}; // storeにreducerを登録\n\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/yoko/Desktop/redux/src/store/index.js"],"names":["createStore","createSlice","INCREMENT","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","countercounter","actionamoutnt","toggleCoutner","counterReducer","type","amount","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEAJ,WAAW,CAAC;AACVK,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KAHO;;AAIRM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KANO;;AAORO,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACI,cAAN,GAAuBJ,KAAK,CAACL,OAAN,GAAgBU,aAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,GAAG,CAAE;;AAVV;AAHA,CAAD,CAAX,C,CAgBA;;AACA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCP,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXS,MAAW;;AACvD,MAAIA,MAAM,CAACK,IAAP,KAAgBf,SAApB,EAA+B;AAC7B,WAAO;AAACE,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA1B;AAA6BC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAhD,KAAP;AACD;;AACD,MAAIO,MAAM,CAACK,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLb,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACM,MAD3B;AAELb,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AACD,MAAIO,MAAM,CAACK,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAACb,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA1B;AAA6BC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAhD,KAAP;AACD;;AAED,MAAIO,MAAM,CAACK,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLb,MAAAA,OAAO,EAAEK,KAAK,CAACL,OADV;AAELC,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ;AAFf,KAAP;AAID;;AACD,SAAOI,KAAP;AACD,CArBD,C,CAuBA;;;AACA,MAAMU,KAAK,GAAGnB,WAAW,CAACgB,cAAD,CAAzB;AACA,eAAeG,KAAf","sourcesContent":["import {createStore} from 'redux';\nimport {createSlice} from '@reduxjs/toolkit';\nexport const INCREMENT = 'increment';\nconst initialState = {counter: 0, showCounter: true};\n\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.countercounter = state.counter + actionamoutnt;\n    },\n    toggleCoutner() {},\n  },\n});\n// Reducer\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {counter: state.counter + 1, showCounter: state.showCounter};\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === 'decrement') {\n    return {counter: state.counter - 1, showCounter: state.showCounter};\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    };\n  }\n  return state;\n};\n\n// storeにreducerを登録\nconst store = createStore(counterReducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}